[vfdata]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Category - Controls how the extension modifies your category pages.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[category]

; Disable filtering on all category pages. This is if you want the vehicle search to "be seperate" from your main store,
; for "window shopping" style. If disable is set to true, the extension will provide the make/model/year
; search form and filter on all category pages by default, unless white/black listing is in effect.

disable = false

; whitelist =
; blacklist

; Change the category mode for when user clicks through to a category page.
; Defaults to "default". Alternatively specify "group" for 'group view' on every category page.
mode = default


;requireVehicle - Allows you to require user to select a vehicle before seeing products. Should be a comma separated list of category IDs.
;
;Example Usage:
;requireVehicle = "1,2,3"
;
;The splash page that is shown can be edited in vaf/splash.phtml 

requireVehicle = ""


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Directory - Controls behavior of the vehicle link directory module
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[directory]
; enables the module. Defaults to false. 
enable = false




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Product - Controls how the extension modifies your products & shopping cart.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[product]

; Require the user to choose a vehicle before adding product to cart. Set to true to require the user to choose a
; vehicle before adding product to cart. If enabled users will be presented with an intermediate page, and asked to
; choose their vehicle from a list of compatable vehicles before adding the product to the cart.
; The default behavior is for this to be turned off, unless you set it to true.*[1][2]

requireVehicleBeforeCart = false



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Search - Control how the extension's front-end search functionality works for the customer
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[search]

; text to show in the drop-down while the ajax is processing 
loadingText = 'loading'

; Wether to use a search button, if 'hide' will use javascript submit
searchButton = button

; Wether to show a clear button (link). Set to button, hide, or link
clearButton = button

; Text to use as the default option prompting user to make selection. Defaults to "-please select-" if you do not override it.
; Use %s to put the current level. Example "- Pick %s -" will cause each drop down to read "- Pick Make -", "- Pick Year -",etc.
defaultText = '-please select-'

; Set to false if you don't want labels in front of the select boxes. Defaults to true.
labels = true

; What to do with unavailable selections? show, hide, disable. Default = show.
unavailableSelections = show

;  Wether or not to insert a <br /> tag between each level. 
insertBrTag = true

; Where to submit the search form. Valid options are to set this to: "homepagesearch". Setting it to any other value will cause the value to be treated as a URL. 
submitAction = ""

; Where to submit the search form when the user is viewing a "product view" page
submitOnProductAction  = ""

;Where to submit the search form when the user is viewing the home page
submitOnHomepageAction = ""

;Where to submit the search form when the user is viewing the category page
submitOnCategoryAction = ""

loadingStrategy = ""
categoriesThatSubmitToHomepage = ""
categoriesThatRefresh = ""
vehicleTemplate = ""
storeVehicleInSession = true


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; My Garage - Control the "My Garage" Functionality
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[mygarage]
;Set to true to show the "My Garage" block. 
show = true

;Tuck away the search into "low profile mode" after selection is made. 
collapseAfterSelection = true



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Home Page Search - Control how your customer uses the extension to search from the home-page.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[homepagesearch]

; Change the search results display mode
; Valid values are "group" or "grid".
;   grid will enable a sortable native Magento grid grouping all products in one giant group.
;   group will enable a javascript powered interface where products are grouped according to their location in the category tree
mode = grid

;  Specify comma delimited category ids to exclude those category's product from being included in the homepage search
exclude_categories = ""



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Category Chooser - You can allow your customer to choose from a list of "top level" categories to search in when using the vehicle search. If not used, searches will cover all categories.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[categorychooser]

; Show the category chooser on the homepage 
; onHomepage = false

; Show category chooser on pages other than homepage 
; onAllPages = false

;Show "all" as the first option of the category chooser (for homepage) 
; allOptionOnHomepage = false

; Show "all" as the first option of the category chooser (for all pages) 
; allOptionOnAllPages  = false

; text to show for the "all categories" option 
; allCategoryOptionText  = 'All'

; Category IDs to ignore 
; ignore =



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Automotive Search Engine Optomization - Control how the extension affects your search engine optimization (SEO).
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[seo]

; Enable an html Sitemap.
htmlSitemap = true

; Rewrite Product Names. If set to true the name of the vehicle will be appended to the product name
rewriteProductName = true

; When rewritten globally, the product title will appear rewritten eveywhere [globally], including but not limited to the page's html title tag and shopping cart. If this option is not activated, you must use a snippet for each place you want the product's title to appear rewritten.
;globalRewrites = false

;Change how product titles are altered 
; productNameTemplate = '_product_ for _vehicle_'

;rewriteLevels Change how URLs are generated
;For example, if your schema is make/model/year you could set this to "make,model" to not have a page for each year. You must only omit levels off the end.
; rewriteLevels = make,model


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Importer - Controls the import/export module.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[importer]

;  - Defaults to false. If set to true, import files will be accepted with less than all the "levels". Missing levels will be treated as if they were included but every row set to "Base". 
; allowMissingFields = false

; Y2KMode - Defaults to true, enables Y2k Mode. Converts 2 digit years to 4 digit years as per the Vehicles List Import documentation. 
Y2KMode = true

;Y2KThreshold - Defaults to 25. If a two digit year is less than this number, it assumed to mean 21st century; otherwise 20th century. 
; Y2KThreshold = 25

[tire]
populateWhenSelectVehicle = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Module Status Configuration - Controls which modules get executed at runtime. Disabling what modules aren't used will save cpu cycles.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[modulestatus]

enableVafwheel = true

enableVaftire = true

enableVafwheeladapter = true